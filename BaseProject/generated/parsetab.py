
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '8C0C60631FBF3FB9EA1133F284548890'
    
_lr_action_items = {'WHILE':([0,13,18,],[4,4,4,]),'(':([4,7,8,10,14,19,20,],[8,8,8,8,8,8,8,]),'ADD_OP':([4,7,8,9,10,11,12,14,15,16,17,19,20,22,23,25,26,],[10,10,10,-9,10,20,-10,10,20,20,-12,10,10,20,-11,-8,-7,]),';':([1,3,5,9,12,15,17,22,23,25,26,27,],[-4,-3,13,-9,-10,-5,-12,-13,-11,-8,-7,-6,]),')':([9,12,16,17,23,25,26,],[-9,-10,23,-12,-11,-8,-7,]),'}':([1,3,5,9,12,15,17,21,22,23,24,25,26,27,],[-4,-3,-1,-9,-10,-5,-12,-2,-13,-11,27,-8,-7,-6,]),'{':([9,11,12,17,23,25,26,],[-9,18,-10,-12,-11,-8,-7,]),'$end':([1,2,3,5,9,12,15,17,21,22,23,25,26,27,],[-4,0,-3,-1,-9,-10,-5,-12,-2,-13,-11,-8,-7,-6,]),'IDENTIFIER':([0,4,7,8,10,13,14,18,19,20,],[6,12,12,12,12,6,12,6,12,12,]),'NUMBER':([4,7,8,10,14,19,20,],[9,9,9,9,9,9,9,]),'=':([6,],[14,]),'PRINT':([0,13,18,],[7,7,7,]),'MUL_OP':([9,11,12,15,16,17,22,23,25,26,],[-9,19,-10,19,19,-12,19,-11,-8,19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,13,18,],[5,5,5,]),'assignation':([0,13,18,],[3,3,3,]),'structure':([0,13,18,],[1,1,1,]),'programme':([0,13,18,],[2,21,24,]),'expression':([4,7,8,10,14,19,20,],[11,15,16,17,22,25,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser5.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',22),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',26),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',30),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',31),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',35),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',36),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',40),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',44),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',48),
]
