
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '190B1EE511C239518C86731479E13EA6'
    
_lr_action_items = {'NUMBER':([1,2,6,10,14,15,17,19,23,24,25,26,27,28,32,45,52,55,57,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),')':([11,13,29,30,37,38,39,40,41,42,43,58,],[-16,-17,43,-19,-13,-10,-14,-11,-12,-15,-18,59,]),'<':([11,12,13,16,18,21,29,30,31,33,37,38,39,40,41,42,43,44,49,54,56,58,],[-16,25,-17,25,25,25,25,-19,25,25,25,-10,25,-11,25,25,-18,25,25,25,25,25,]),'PRINT':([0,20,22,35,48,],[2,2,2,2,2,]),'WHILE':([0,20,22,35,48,],[1,1,1,1,1,]),'=':([3,],[17,]),'IDENTIFIER':([0,1,2,6,10,14,15,17,19,20,22,23,24,25,26,27,28,32,35,45,48,52,55,57,],[3,13,13,13,13,13,13,13,13,3,3,13,13,13,13,13,13,13,3,13,3,13,13,13,]),'}':([4,7,9,11,13,16,30,31,34,36,37,38,39,40,41,42,43,46,47,50,51,53,59,],[-4,-3,-1,-16,-17,-5,-19,-20,-2,47,-13,-10,-14,-11,-12,-15,-18,50,-7,-8,53,-6,-9,]),'{':([11,12,13,21,30,37,38,39,40,41,42,43,44,],[-16,22,-17,35,-19,-13,-10,-14,-11,-12,-15,-18,48,]),';':([4,7,9,11,13,16,30,31,37,38,39,40,41,42,43,47,50,53,59,],[-4,-3,20,-16,-17,-5,-19,-20,-13,-10,-14,-11,-12,-15,-18,-7,-8,-6,-9,]),'FOR':([0,20,22,35,48,],[6,6,6,6,6,]),'(':([1,2,6,8,10,14,15,17,19,23,24,25,26,27,28,32,45,52,55,57,],[14,14,14,19,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([4,5,7,9,11,13,16,30,31,34,37,38,39,40,41,42,43,47,50,53,59,],[-4,0,-3,-1,-16,-17,-5,-19,-20,-2,-13,-10,-14,-11,-12,-15,-18,-7,-8,-6,-9,]),'NOTEQUAL':([11,12,13,16,18,21,29,30,31,33,37,38,39,40,41,42,43,44,49,54,56,58,],[-16,23,-17,23,23,23,23,-19,23,23,23,-10,23,-11,23,23,-18,23,23,23,23,23,]),'PRINTPIXEL':([0,20,22,35,48,],[8,8,8,8,8,]),'ADD_OP':([1,2,6,10,11,12,13,14,15,16,17,18,19,21,23,24,25,26,27,28,29,30,31,32,33,37,38,39,40,41,42,43,44,45,49,52,54,55,56,57,58,],[15,15,15,15,-16,24,-17,15,15,24,15,24,15,24,15,15,15,15,15,15,24,-19,24,15,24,24,-10,24,-11,24,24,-18,24,15,24,15,24,15,24,15,24,]),'>':([11,12,13,16,18,21,29,30,31,33,37,38,39,40,41,42,43,44,49,54,56,58,],[-16,28,-17,28,28,28,28,-19,28,28,28,-10,28,-11,28,28,-18,28,28,28,28,28,]),'MUL_OP':([11,12,13,16,18,21,29,30,31,33,37,38,39,40,41,42,43,44,49,54,56,58,],[-16,26,-17,26,26,26,26,-19,26,26,26,26,26,-11,26,26,-18,26,26,26,26,26,]),',':([11,13,18,30,33,37,38,39,40,41,42,43,49,54,56,],[-16,-17,32,-19,45,-13,-10,-14,-11,-12,-15,-18,52,55,57,]),'IF':([0,20,22,35,48,],[10,10,10,10,10,]),'EQUAL':([11,12,13,16,18,21,29,30,31,33,37,38,39,40,41,42,43,44,49,54,56,58,],[-16,27,-17,27,27,27,27,-19,27,27,27,-10,27,-11,27,27,-18,27,27,27,27,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'structure':([0,20,22,35,48,],[4,4,4,4,4,]),'expression':([1,2,6,10,14,15,17,19,23,24,25,26,27,28,32,45,52,55,57,],[12,16,18,21,29,30,31,33,37,38,39,40,41,42,44,49,54,56,58,]),'statement':([0,20,22,35,48,],[9,9,9,9,9,]),'assignation':([0,20,22,35,48,],[7,7,7,7,7,]),'programme':([0,20,22,35,48,],[5,34,36,46,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> FOR expression , expression { programme }','structure',7,'p_structure_for','parserPaint.py',30),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',37),
  ('structure -> IF expression { programme }','structure',5,'p_structure_if','parserPaint.py',42),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',47),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',52),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',53),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','parserPaint.py',58),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_notequal','parserPaint.py',63),
  ('expression -> expression < expression','expression',3,'p_expression_less','parserPaint.py',68),
  ('expression -> expression > expression','expression',3,'p_expression_more','parserPaint.py',73),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',78),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',79),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',84),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',89),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',94),
]
