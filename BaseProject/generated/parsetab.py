
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2263CB507DFD2FFC9692CF2C355B8600'
    
_lr_action_items = {'WHILE':([0,21,32,33,58,],[5,5,5,5,5,]),'EQUAL':([13,15,17,18,19,22,23,24,25,34,37,38,39,40,41,42,43,47,50,53,54,57,61,],[-17,-16,29,29,29,29,29,-19,29,29,-18,-10,29,29,29,29,-11,29,29,29,29,29,29,]),'IDENTIFIER':([0,5,6,7,11,12,14,16,20,21,26,27,28,29,30,31,32,33,36,46,51,52,55,58,59,],[2,13,13,13,13,13,13,13,13,2,13,13,13,13,13,13,2,2,13,13,13,13,13,2,13,]),'NUMBER':([5,6,7,11,12,14,16,20,26,27,28,29,30,31,36,46,51,52,55,59,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NOTEQUAL':([13,15,17,18,19,22,23,24,25,34,37,38,39,40,41,42,43,47,50,53,54,57,61,],[-17,-16,28,28,28,28,28,-19,28,28,-18,-10,28,28,28,28,-11,28,28,28,28,28,28,]),';':([3,4,10,13,15,19,23,24,34,37,38,39,40,41,42,43,48,49,50,62,63,],[-3,-4,21,-17,-16,-5,-20,-19,46,-18,-10,-15,-13,-12,-14,-11,-6,-8,52,-7,-9,]),'<':([13,15,17,18,19,22,23,24,25,34,37,38,39,40,41,42,43,47,50,53,54,57,61,],[-17,-16,30,30,30,30,30,-19,30,30,-18,-10,30,30,30,30,-11,30,30,30,30,30,30,]),')':([13,15,24,25,37,38,39,40,41,42,43,54,61,],[-17,-16,-19,37,-18,-10,-15,-13,-12,-14,-11,56,63,]),'ADD_OP':([5,6,7,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,34,36,37,38,39,40,41,42,43,46,47,50,51,52,53,54,55,57,59,61,],[14,14,14,14,14,-17,14,-16,14,26,26,26,14,26,26,-19,26,14,14,14,14,14,14,26,14,-18,-10,26,26,26,26,-11,14,26,26,14,14,26,26,14,26,14,26,]),'PRINT':([0,21,32,33,58,],[7,7,7,7,7,]),',':([13,15,22,24,37,38,39,40,41,42,43,47,53,57,],[-17,-16,36,-19,-18,-10,-15,-13,-12,-14,-11,51,55,59,]),'PRINTPIXEL':([0,21,32,33,58,],[1,1,1,1,1,]),'MUL_OP':([13,15,17,18,19,22,23,24,25,34,37,38,39,40,41,42,43,47,50,53,54,57,61,],[-17,-16,31,31,31,31,31,-19,31,31,-18,31,31,31,31,31,-11,31,31,31,31,31,31,]),'IF':([0,21,32,33,58,],[6,6,6,6,6,]),'FOR':([0,21,32,33,58,],[9,9,9,9,9,]),'}':([3,4,10,13,15,19,23,24,35,37,38,39,40,41,42,43,44,45,48,49,60,62,63,],[-3,-4,-1,-17,-16,-5,-20,-19,-2,-18,-10,-15,-13,-12,-14,-11,48,49,-6,-8,62,-7,-9,]),'(':([1,5,6,7,9,11,12,14,16,20,26,27,28,29,30,31,36,46,51,52,55,59,],[11,16,16,16,20,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([3,4,8,10,13,15,19,23,24,35,37,38,39,40,41,42,43,48,49,62,63,],[-3,-4,0,-1,-17,-16,-5,-20,-19,-2,-18,-10,-15,-13,-12,-14,-11,-6,-8,-7,-9,]),'=':([2,],[12,]),'>':([13,15,17,18,19,22,23,24,25,34,37,38,39,40,41,42,43,47,50,53,54,57,61,],[-17,-16,27,27,27,27,27,-19,27,27,-18,-10,27,27,27,27,-11,27,27,27,27,27,27,]),'{':([13,15,17,18,24,37,38,39,40,41,42,43,56,],[-17,-16,32,33,-19,-18,-10,-15,-13,-12,-14,-11,58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,21,32,33,58,],[8,35,44,45,60,]),'structure':([0,21,32,33,58,],[4,4,4,4,4,]),'expression':([5,6,7,11,12,14,16,20,26,27,28,29,30,31,36,46,51,52,55,59,],[17,18,19,22,23,24,25,34,38,39,40,41,42,43,47,50,53,54,57,61,]),'assignation':([0,21,32,33,58,],[3,3,3,3,3,]),'statement':([0,21,32,33,58,],[10,10,10,10,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('structure -> FOR ( expression ; expression ; expression ) { programme }','structure',11,'p_structure_for','parserPaint.py',36),
  ('structure -> IF expression { programme }','structure',5,'p_structure_if','parserPaint.py',41),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',46),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',51),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',52),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','parserPaint.py',57),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_notequal','parserPaint.py',62),
  ('expression -> expression < expression','expression',3,'p_expression_less','parserPaint.py',67),
  ('expression -> expression > expression','expression',3,'p_expression_more','parserPaint.py',72),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',77),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',78),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',83),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',88),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',93),
]
