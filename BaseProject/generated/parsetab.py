
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'ED13F83B1E31F3DBA3AC00E24DEAC555'
    
_lr_action_items = {'IF':([0,20,30,32,54,],[1,1,1,1,1,]),'NUMBER':([1,5,6,11,13,16,19,21,24,25,26,27,28,29,44,51,55,59,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FOR':([0,20,30,32,54,],[10,10,10,10,10,]),'PRINTPIXEL':([0,20,30,32,54,],[4,4,4,4,4,]),'ADD_OP':([1,5,6,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,31,33,35,36,37,38,39,40,41,42,44,48,51,53,55,57,59,60,],[11,11,11,11,-16,11,28,-17,11,28,28,11,11,-19,28,11,11,11,11,11,11,28,28,28,-18,-14,-13,-15,-11,-10,-12,11,28,11,28,11,28,11,28,]),'$end':([2,3,8,9,12,15,18,22,33,34,36,37,38,39,40,41,42,47,49,58,61,],[-4,0,-1,-3,-16,-17,-5,-19,-20,-2,-18,-14,-13,-15,-11,-10,-12,-8,-7,-6,-9,]),',':([12,15,22,31,35,36,37,38,39,40,41,42,48,53,57,],[-16,-17,-19,44,46,-18,-14,-13,-15,-11,-10,-12,51,55,59,]),'WHILE':([0,20,30,32,54,],[5,5,5,5,5,]),';':([2,8,9,12,15,18,22,33,36,37,38,39,40,41,42,47,49,58,61,],[-4,20,-3,-16,-17,-5,-19,-20,-18,-14,-13,-15,-11,-10,-12,-8,-7,-6,-9,]),'{':([12,14,15,17,22,36,37,38,39,40,41,42,52,],[-16,30,-17,32,-19,-18,-14,-13,-15,-11,-10,-12,54,]),'=':([7,],[19,]),'(':([1,4,5,6,10,11,13,16,19,21,24,25,26,27,28,29,44,51,55,59,],[13,16,13,13,21,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'PRINT':([0,20,30,32,54,],[6,6,6,6,6,]),'NOTEQUAL':([12,14,15,17,18,22,23,31,33,35,36,37,38,39,40,41,42,48,53,57,60,],[-16,25,-17,25,25,25,25,25,25,25,-18,-14,25,-15,25,25,25,25,25,25,25,]),'IDENTIFIER':([0,1,5,6,11,13,16,19,20,21,24,25,26,27,28,29,30,32,44,46,51,54,55,59,],[7,15,15,15,15,15,15,15,7,15,15,15,15,15,15,15,7,7,15,7,15,7,15,15,]),'>':([12,14,15,17,18,22,23,31,33,35,36,37,38,39,40,41,42,48,53,57,60,],[-16,26,-17,26,26,26,26,26,26,26,-18,26,26,26,26,26,26,26,26,26,26,]),')':([12,15,22,23,33,36,37,38,39,40,41,42,50,60,],[-16,-17,-19,36,-20,-18,-14,-13,-15,-11,-10,-12,52,61,]),'}':([2,8,9,12,15,18,22,33,34,36,37,38,39,40,41,42,43,45,47,49,56,58,61,],[-4,-1,-3,-16,-17,-5,-19,-20,-2,-18,-14,-13,-15,-11,-10,-12,47,49,-8,-7,58,-6,-9,]),'<':([12,14,15,17,18,22,23,31,33,35,36,37,38,39,40,41,42,48,53,57,60,],[-16,24,-17,24,24,24,24,24,24,24,-18,24,24,-15,24,24,24,24,24,24,24,]),'EQUAL':([12,14,15,17,18,22,23,31,33,35,36,37,38,39,40,41,42,48,53,57,60,],[-16,29,-17,29,29,29,29,29,29,29,-18,-14,-13,-15,29,29,29,29,29,29,29,]),'MUL_OP':([12,14,15,17,18,22,23,31,33,35,36,37,38,39,40,41,42,48,53,57,60,],[-16,27,-17,27,27,-19,27,27,27,27,-18,-14,-13,-15,-11,27,-12,27,27,27,27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([1,5,6,11,13,16,19,21,24,25,26,27,28,29,44,51,55,59,],[14,17,18,22,23,31,33,35,37,38,39,40,41,42,48,53,57,60,]),'structure':([0,20,30,32,54,],[2,2,2,2,2,]),'assignation':([0,20,30,32,46,54,],[9,9,9,9,50,9,]),'statement':([0,20,30,32,54,],[8,8,8,8,8,]),'programme':([0,20,30,32,54,],[3,34,43,45,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> FOR ( expression , assignation ) { programme }','structure',9,'p_structure_for','parserPaint.py',30),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',37),
  ('structure -> IF expression { programme }','structure',5,'p_structure_if','parserPaint.py',42),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',47),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',52),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',53),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','parserPaint.py',58),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_notequal','parserPaint.py',63),
  ('expression -> expression < expression','expression',3,'p_expression_less','parserPaint.py',68),
  ('expression -> expression > expression','expression',3,'p_expression_more','parserPaint.py',73),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',78),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',79),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',84),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',89),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',94),
]
