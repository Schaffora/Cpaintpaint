
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'ED13F83B1E31F3DBA3AC00E24DEAC555'
    
_lr_action_items = {',':([12,15,23,31,32,36,37,38,39,40,42,43,49,54,58,],[-16,-17,-19,44,45,-18,-14,-11,-10,-13,-15,-12,52,56,59,]),'MUL_OP':([12,14,15,18,19,22,23,31,32,35,36,37,38,39,40,42,43,49,54,58,60,],[-16,25,-17,25,25,25,-19,25,25,25,-18,-14,-11,25,-13,-15,-12,25,25,25,25,]),'WHILE':([0,20,28,33,53,],[2,2,2,2,2,]),')':([12,15,22,23,35,36,37,38,39,40,42,43,48,60,],[-16,-17,36,-19,-20,-18,-14,-11,-10,-13,-15,-12,51,61,]),'NOTEQUAL':([12,14,15,18,19,22,23,31,32,35,36,37,38,39,40,42,43,49,54,58,60,],[-16,27,-17,27,27,27,27,27,27,27,-18,-14,27,27,27,-15,27,27,27,27,27,]),'}':([1,3,8,12,15,18,23,34,35,36,37,38,39,40,41,42,43,46,47,50,55,57,61,],[-4,-3,-1,-16,-17,-5,-19,-2,-20,-18,-14,-11,-10,-13,47,-15,-12,50,-7,-8,57,-6,-9,]),'FOR':([0,20,28,33,53,],[4,4,4,4,4,]),'EQUAL':([12,14,15,18,19,22,23,31,32,35,36,37,38,39,40,42,43,49,54,58,60,],[-16,30,-17,30,30,30,30,30,30,30,-18,-14,30,30,-13,-15,30,30,30,30,30,]),'(':([2,4,5,6,7,11,13,16,17,21,24,25,26,27,29,30,45,52,56,59,],[11,16,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'PRINTPIXEL':([0,20,28,33,53,],[5,5,5,5,5,]),'>':([12,14,15,18,19,22,23,31,32,35,36,37,38,39,40,42,43,49,54,58,60,],[-16,29,-17,29,29,29,29,29,29,29,-18,29,29,29,29,29,29,29,29,29,29,]),'PRINT':([0,20,28,33,53,],[6,6,6,6,6,]),'IF':([0,20,28,33,53,],[7,7,7,7,7,]),'NUMBER':([2,6,7,11,13,16,17,21,24,25,26,27,29,30,45,52,56,59,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'=':([9,],[21,]),'ADD_OP':([2,6,7,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,29,30,31,32,35,36,37,38,39,40,42,43,45,49,52,54,56,58,59,60,],[13,13,13,13,-16,13,26,-17,13,13,26,26,13,26,-19,13,13,13,13,13,13,26,26,26,-18,-14,-11,-10,-13,-15,-12,13,26,13,26,13,26,13,26,]),'IDENTIFIER':([0,2,6,7,11,13,16,17,20,21,24,25,26,27,28,29,30,33,44,45,52,53,56,59,],[9,15,15,15,15,15,15,15,9,15,15,15,15,15,9,15,15,9,9,15,15,9,15,15,]),'{':([12,14,15,19,23,36,37,38,39,40,42,43,51,],[-16,28,-17,33,-19,-18,-14,-11,-10,-13,-15,-12,53,]),'<':([12,14,15,18,19,22,23,31,32,35,36,37,38,39,40,42,43,49,54,58,60,],[-16,24,-17,24,24,24,24,24,24,24,-18,24,24,24,24,-15,24,24,24,24,24,]),';':([1,3,8,12,15,18,23,35,36,37,38,39,40,42,43,47,50,57,61,],[-4,-3,20,-16,-17,-5,-19,-20,-18,-14,-11,-10,-13,-15,-12,-7,-8,-6,-9,]),'$end':([1,3,8,10,12,15,18,23,34,35,36,37,38,39,40,42,43,47,50,57,61,],[-4,-3,-1,0,-16,-17,-5,-19,-2,-20,-18,-14,-11,-10,-13,-15,-12,-7,-8,-6,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([2,6,7,11,13,16,17,21,24,25,26,27,29,30,45,52,56,59,],[14,18,19,22,23,31,32,35,37,38,39,40,42,43,49,54,58,60,]),'structure':([0,20,28,33,53,],[1,1,1,1,1,]),'statement':([0,20,28,33,53,],[8,8,8,8,8,]),'programme':([0,20,28,33,53,],[10,34,41,46,55,]),'assignation':([0,20,28,33,44,53,],[3,3,3,3,48,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> FOR ( expression , assignation ) { programme }','structure',9,'p_structure_for','parserPaint.py',30),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',37),
  ('structure -> IF expression { programme }','structure',5,'p_structure_if','parserPaint.py',42),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',47),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',52),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',53),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','parserPaint.py',58),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_notequal','parserPaint.py',63),
  ('expression -> expression < expression','expression',3,'p_expression_less','parserPaint.py',68),
  ('expression -> expression > expression','expression',3,'p_expression_more','parserPaint.py',73),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',78),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',79),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',84),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',89),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',94),
]
