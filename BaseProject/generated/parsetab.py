
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FD6D3FF64960156BC42A6ECE78C9F2EA'
    
_lr_action_items = {'WHILE':([0,16,20,],[1,1,1,]),')':([9,11,18,22,26,28,29,38,],[-10,-11,-13,29,-8,-9,-12,39,]),'{':([9,11,12,18,26,28,29,],[-10,-11,20,-13,-8,-9,-12,]),'IDENTIFIER':([0,1,6,10,13,14,16,17,19,20,21,30,33,35,37,],[2,11,11,11,11,11,2,11,11,2,11,11,11,11,11,]),',':([9,11,18,25,26,28,29,32,34,36,],[-10,-11,-13,30,-8,-9,-12,33,35,37,]),'(':([1,6,8,10,13,14,17,19,21,30,33,35,37,],[13,13,17,13,13,13,13,13,13,13,13,13,13,]),'PRINTPIXEL':([0,16,20,],[8,8,8,]),'}':([3,5,7,9,11,15,18,23,24,26,27,28,29,31,39,],[-4,-3,-1,-10,-11,-5,-13,-14,-2,-8,31,-9,-12,-6,-7,]),'NUMBER':([1,6,10,13,14,17,19,21,30,33,35,37,],[9,9,9,9,9,9,9,9,9,9,9,9,]),';':([3,5,7,9,11,15,18,23,26,28,29,31,39,],[-4,-3,16,-10,-11,-5,-13,-14,-8,-9,-12,-6,-7,]),'$end':([3,4,5,7,9,11,15,18,23,24,26,28,29,31,39,],[-4,0,-3,-1,-10,-11,-5,-13,-14,-2,-8,-9,-12,-6,-7,]),'ADD_OP':([1,6,9,10,11,12,13,14,15,17,18,19,21,22,23,25,26,28,29,30,32,33,34,35,36,37,38,],[10,10,-10,10,-11,19,10,10,19,10,-13,10,10,19,19,19,-8,-9,-12,10,19,10,19,10,19,10,19,]),'=':([2,],[14,]),'MUL_OP':([9,11,12,15,18,22,23,25,26,28,29,32,34,36,38,],[-10,-11,21,21,-13,21,21,21,21,-9,-12,21,21,21,21,]),'PRINT':([0,16,20,],[6,6,6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,16,20,],[7,7,7,]),'programme':([0,16,20,],[4,24,27,]),'expression':([1,6,10,13,14,17,19,21,30,33,35,37,],[12,15,18,22,23,25,26,28,32,34,36,38,]),'assignation':([0,16,20,],[5,5,5,]),'structure':([0,16,20,],[3,3,3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',35),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',40),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',46),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',47),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',52),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',57),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',62),
]
