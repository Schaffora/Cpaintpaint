
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '6AFCFD52819BB367A1E21363FD1713A8'
    
_lr_action_items = {',':([11,15,22,30,33,34,35,36,38,39,40,44,47,49,],[-16,-15,-18,41,-17,-9,-13,-12,-14,-11,-10,46,48,50,]),'IDENTIFIER':([0,2,8,9,10,12,13,16,17,23,24,25,26,27,28,29,32,41,46,48,50,],[1,11,11,11,11,11,11,11,1,11,11,11,1,11,11,11,1,11,11,11,11,]),'IF':([0,17,26,32,],[2,2,2,2,]),'(':([2,3,8,9,10,12,13,16,23,24,25,27,28,29,41,46,48,50,],[12,16,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'<':([11,14,15,18,19,20,21,22,30,33,34,35,36,38,39,40,44,47,49,51,],[-16,24,-15,24,24,24,24,-18,24,-17,-9,24,24,24,24,-10,24,24,24,24,]),'>':([11,14,15,18,19,20,21,22,30,33,34,35,36,38,39,40,44,47,49,51,],[-16,27,-15,27,27,27,27,-18,27,-17,-9,27,27,27,27,-10,27,27,27,27,]),'}':([4,5,7,11,15,19,20,22,31,33,34,35,36,37,38,39,40,42,43,45,52,],[-3,-4,-1,-16,-15,-5,-19,-18,-2,-17,-9,-13,-12,43,-14,-11,-10,45,-7,-6,-8,]),'EQUAL':([11,14,15,18,19,20,21,22,30,33,34,35,36,38,39,40,44,47,49,51,],[-16,28,-15,28,28,28,28,-18,28,-17,-9,28,28,28,28,-10,28,28,28,28,]),'PRINTPIXEL':([0,17,26,32,],[3,3,3,3,]),')':([11,15,21,22,33,34,35,36,38,39,40,51,],[-16,-15,33,-18,-17,-9,-13,-12,-14,-11,-10,52,]),'$end':([4,5,6,7,11,15,19,20,22,31,33,34,35,36,38,39,40,43,45,52,],[-3,-4,0,-1,-16,-15,-5,-19,-18,-2,-17,-9,-13,-12,-14,-11,-10,-7,-6,-8,]),'ADD_OP':([2,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,27,28,29,30,33,34,35,36,38,39,40,41,44,46,47,48,49,50,51,],[13,13,13,13,-16,13,13,23,-15,13,23,23,23,23,-18,13,13,13,13,13,13,23,-17,-9,23,23,23,23,-10,13,23,13,23,13,23,13,23,]),'=':([1,],[10,]),';':([4,5,7,11,15,19,20,22,33,34,35,36,38,39,40,43,45,52,],[-3,-4,17,-16,-15,-5,-19,-18,-17,-9,-13,-12,-14,-11,-10,-7,-6,-8,]),'MUL_OP':([11,14,15,18,19,20,21,22,30,33,34,35,36,38,39,40,44,47,49,51,],[-16,29,-15,29,29,29,29,-18,29,-17,29,29,29,29,29,-10,29,29,29,29,]),'{':([11,14,15,18,22,33,34,35,36,38,39,40,],[-16,26,-15,32,-18,-17,-9,-13,-12,-14,-11,-10,]),'PRINT':([0,17,26,32,],[9,9,9,9,]),'NUMBER':([2,8,9,10,12,13,16,23,24,25,27,28,29,41,46,48,50,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NOTEQUAL':([11,14,15,18,19,20,21,22,30,33,34,35,36,38,39,40,44,47,49,51,],[-16,25,-15,25,25,25,25,-18,25,-17,-9,25,25,25,25,-10,25,25,25,25,]),'WHILE':([0,17,26,32,],[8,8,8,8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,17,26,32,],[7,7,7,7,]),'structure':([0,17,26,32,],[5,5,5,5,]),'expression':([2,8,9,10,12,13,16,23,24,25,27,28,29,41,46,48,50,],[14,18,19,20,21,22,30,34,35,36,38,39,40,44,47,49,51,]),'programme':([0,17,26,32,],[6,31,37,42,]),'assignation':([0,17,26,32,],[4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('structure -> IF expression { programme }','structure',5,'p_structure_if','parserPaint.py',35),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',40),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',45),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',46),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','parserPaint.py',51),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_notequal','parserPaint.py',56),
  ('expression -> expression < expression','expression',3,'p_expression_less','parserPaint.py',60),
  ('expression -> expression > expression','expression',3,'p_expression_more','parserPaint.py',64),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',68),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',69),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',74),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',79),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',84),
]
