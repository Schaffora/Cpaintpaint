
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FDBFB0783D908C02D04A9C82DFB4864A'
    
_lr_action_items = {'}':([2,3,4,14,16,19,21,22,24,32,33,34,35,36,37,38,40,41,48,],[-3,-4,-1,-14,-13,-5,-2,-17,-16,-15,-12,-10,-9,-11,40,41,-6,-7,-8,]),'PRINTPIXEL':([0,11,29,30,],[1,1,1,1,]),')':([14,16,23,24,32,33,34,35,36,47,],[-14,-13,32,-16,-15,-12,-10,-9,-11,48,]),'EQUAL':([14,16,17,18,19,20,22,23,24,32,33,34,35,36,39,43,45,47,],[-14,-13,28,28,28,28,28,28,-16,-15,28,-10,-9,28,28,28,28,28,]),'WHILE':([0,11,29,30,],[6,6,6,6,]),'IDENTIFIER':([0,6,7,8,10,11,12,13,15,25,26,27,28,29,30,31,42,44,46,],[5,14,14,14,14,5,14,14,14,14,14,14,14,5,5,14,14,14,14,]),'MUL_OP':([14,16,17,18,19,20,22,23,24,32,33,34,35,36,39,43,45,47,],[-14,-13,26,26,26,26,26,26,-16,-15,26,-10,26,26,26,26,26,26,]),'(':([1,6,7,8,10,12,13,15,25,26,27,28,31,42,44,46,],[10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ADD_OP':([6,7,8,10,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,31,32,33,34,35,36,39,42,43,44,45,46,47,],[15,15,15,15,15,15,-14,15,-13,27,27,27,27,27,27,-16,15,15,15,15,15,-15,27,-10,-9,27,27,15,27,15,27,15,27,]),'$end':([2,3,4,9,14,16,19,21,22,24,32,33,34,35,36,40,41,48,],[-3,-4,-1,0,-14,-13,-5,-2,-17,-16,-15,-12,-10,-9,-11,-6,-7,-8,]),'NOTEQUAL':([14,16,17,18,19,20,22,23,24,32,33,34,35,36,39,43,45,47,],[-14,-13,25,25,25,25,25,25,-16,-15,25,-10,-9,25,25,25,25,25,]),'IF':([0,11,29,30,],[7,7,7,7,]),'{':([14,16,17,18,24,32,33,34,35,36,],[-14,-13,29,30,-16,-15,-12,-10,-9,-11,]),'=':([5,],[12,]),',':([14,16,20,24,32,33,34,35,36,39,43,45,],[-14,-13,31,-16,-15,-12,-10,-9,-11,42,44,46,]),'NUMBER':([6,7,8,10,12,13,15,25,26,27,28,31,42,44,46,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'PRINT':([0,11,29,30,],[8,8,8,8,]),';':([2,3,4,14,16,19,22,24,32,33,34,35,36,40,41,48,],[-3,-4,11,-14,-13,-5,-17,-16,-15,-12,-10,-9,-11,-6,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,11,29,30,],[4,4,4,4,]),'structure':([0,11,29,30,],[3,3,3,3,]),'assignation':([0,11,29,30,],[2,2,2,2,]),'expression':([6,7,8,10,12,13,15,25,26,27,28,31,42,44,46,],[17,18,19,20,22,23,24,33,34,35,36,39,43,45,47,]),'programme':([0,11,29,30,],[9,21,37,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('structure -> IF expression { programme }','structure',5,'p_structure_if','parserPaint.py',35),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',40),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',45),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',46),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_equal','parserPaint.py',51),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_notequal','parserPaint.py',56),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',61),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',62),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',67),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',72),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',77),
]
