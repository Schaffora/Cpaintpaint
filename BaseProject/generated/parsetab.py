
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '89A4617805BF0E3F19A022C1C4BA29CB'
    
_lr_action_items = {',':([11,14,19,24,26,27,28,32,34,36,],[-11,-10,-13,30,-12,-8,-9,33,35,37,]),'MUL_OP':([11,13,14,15,19,20,24,25,26,27,28,32,34,36,38,],[-11,22,-10,22,-13,22,22,22,-12,22,-9,22,22,22,22,]),')':([11,14,19,20,26,27,28,38,],[-11,-10,-13,26,-12,-8,-9,39,]),'PRINT':([0,9,23,],[2,2,2,]),'ADD_OP':([2,5,10,11,12,13,14,15,16,17,19,20,21,22,24,25,26,27,28,30,32,33,34,35,36,37,38,],[10,10,10,-11,10,21,-10,21,10,10,-13,21,10,10,21,21,-12,-8,-9,10,21,10,21,10,21,10,21,]),'}':([1,3,4,11,13,14,18,19,25,26,27,28,29,31,39,],[-1,-4,-3,-11,-5,-10,-2,-13,-14,-12,-8,-9,31,-6,-7,]),'$end':([1,3,4,7,11,13,14,18,19,25,26,27,28,31,39,],[-1,-4,-3,0,-11,-5,-10,-2,-13,-14,-12,-8,-9,-6,-7,]),'{':([11,14,15,19,26,27,28,],[-11,-10,23,-13,-12,-8,-9,]),'=':([8,],[17,]),'WHILE':([0,9,23,],[5,5,5,]),'(':([2,5,6,10,12,16,17,21,22,30,33,35,37,],[12,12,16,12,12,12,12,12,12,12,12,12,12,]),'PRINTPIXEL':([0,9,23,],[6,6,6,]),';':([1,3,4,11,13,14,19,25,26,27,28,31,39,],[9,-4,-3,-11,-5,-10,-13,-14,-12,-8,-9,-6,-7,]),'NUMBER':([2,5,10,12,16,17,21,22,30,33,35,37,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'IDENTIFIER':([0,2,5,9,10,12,16,17,21,22,23,30,33,35,37,],[8,11,11,8,11,11,11,11,11,11,8,11,11,11,11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'structure':([0,9,23,],[3,3,3,]),'statement':([0,9,23,],[1,1,1,]),'assignation':([0,9,23,],[4,4,4,]),'programme':([0,9,23,],[7,18,29,]),'expression':([2,5,10,12,16,17,21,22,30,33,35,37,],[13,15,19,20,24,25,27,28,32,34,36,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',35),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',40),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',46),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',47),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',52),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',57),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',62),
]
