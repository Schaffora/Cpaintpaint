
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FD6D3FF64960156BC42A6ECE78C9F2EA'
    
_lr_action_items = {'ADD_OP':([2,6,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,31,33,34,35,36,37,38,],[10,10,10,10,-10,-11,10,21,10,21,21,-13,21,10,10,21,10,-12,-8,-9,21,10,21,10,21,10,21,]),'PRINTPIXEL':([0,17,24,],[1,1,1,]),'PRINT':([0,17,24,],[2,2,2,]),')':([11,12,19,20,27,28,29,38,],[-10,-11,-13,27,-12,-8,-9,39,]),'MUL_OP':([11,12,14,16,18,19,20,23,27,28,29,31,34,36,38,],[-10,-11,22,22,22,-13,22,22,-12,22,-9,22,22,22,22,]),'}':([3,7,8,11,12,14,19,23,25,27,28,29,30,32,39,],[-3,-4,-1,-10,-11,-5,-13,-14,-2,-12,-8,-9,32,-6,-7,]),'$end':([3,5,7,8,11,12,14,19,23,25,27,28,29,32,39,],[-3,0,-4,-1,-10,-11,-5,-13,-14,-2,-12,-8,-9,-6,-7,]),';':([3,7,8,11,12,14,19,23,27,28,29,32,39,],[-3,-4,17,-10,-11,-5,-13,-14,-12,-8,-9,-6,-7,]),'NUMBER':([2,6,9,10,13,15,21,22,26,33,35,37,],[11,11,11,11,11,11,11,11,11,11,11,11,]),',':([11,12,18,19,27,28,29,31,34,36,],[-10,-11,26,-13,-12,-8,-9,33,35,37,]),'WHILE':([0,17,24,],[6,6,6,]),'IDENTIFIER':([0,2,6,9,10,13,15,17,21,22,24,26,33,35,37,],[4,12,12,12,12,12,12,4,12,12,4,12,12,12,12,]),'(':([1,2,6,9,10,13,15,21,22,26,33,35,37,],[9,13,13,13,13,13,13,13,13,13,13,13,13,]),'{':([11,12,16,19,27,28,29,],[-10,-11,24,-13,-12,-8,-9,]),'=':([4,],[15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,17,24,],[5,25,30,]),'structure':([0,17,24,],[7,7,7,]),'expression':([2,6,9,10,13,15,21,22,26,33,35,37,],[14,16,18,19,20,23,28,29,31,34,36,38,]),'assignation':([0,17,24,],[3,3,3,]),'statement':([0,17,24,],[8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',35),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',40),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',46),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',47),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',52),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',57),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',62),
]
