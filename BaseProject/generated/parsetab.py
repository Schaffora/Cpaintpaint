
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FD6D3FF64960156BC42A6ECE78C9F2EA'
    
_lr_action_items = {'(':([1,7,8,9,12,15,17,19,20,30,33,35,37,],[9,9,17,9,9,9,9,9,9,9,9,9,9,]),'=':([5,],[15,]),'$end':([2,3,4,6,10,11,13,21,22,23,26,27,28,31,39,],[-4,-1,0,-3,-11,-5,-10,-13,-2,-14,-12,-8,-9,-6,-7,]),'PRINTPIXEL':([0,14,24,],[8,8,8,]),'PRINT':([0,14,24,],[1,1,1,]),'}':([2,3,6,10,11,13,21,22,23,26,27,28,29,31,39,],[-4,-1,-3,-11,-5,-10,-13,-2,-14,-12,-8,-9,31,-6,-7,]),')':([10,13,18,21,26,27,28,38,],[-11,-10,26,-13,-12,-8,-9,39,]),'ADD_OP':([1,7,9,10,11,12,13,15,16,17,18,19,20,21,23,25,26,27,28,30,32,33,34,35,36,37,38,],[12,12,12,-11,19,12,-10,12,19,12,19,12,12,-13,19,19,-12,-8,-9,12,19,12,19,12,19,12,19,]),'NUMBER':([1,7,9,12,15,17,19,20,30,33,35,37,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'IDENTIFIER':([0,1,7,9,12,14,15,17,19,20,24,30,33,35,37,],[5,10,10,10,10,5,10,10,10,10,5,10,10,10,10,]),';':([2,3,6,10,11,13,21,23,26,27,28,31,39,],[-4,14,-3,-11,-5,-10,-13,-14,-12,-8,-9,-6,-7,]),'{':([10,13,16,21,26,27,28,],[-11,-10,24,-13,-12,-8,-9,]),'WHILE':([0,14,24,],[7,7,7,]),'MUL_OP':([10,11,13,16,18,21,23,25,26,27,28,32,34,36,38,],[-11,20,-10,20,20,-13,20,20,-12,20,-9,20,20,20,20,]),',':([10,13,21,25,26,27,28,32,34,36,],[-11,-10,-13,30,-12,-8,-9,33,35,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignation':([0,14,24,],[6,6,6,]),'statement':([0,14,24,],[3,3,3,]),'structure':([0,14,24,],[2,2,2,]),'programme':([0,14,24,],[4,22,29,]),'expression':([1,7,9,12,15,17,19,20,30,33,35,37,],[11,16,18,21,23,25,27,28,32,34,36,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',35),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',40),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',46),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',47),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',52),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',57),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',62),
]
