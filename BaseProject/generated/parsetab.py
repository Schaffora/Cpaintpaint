
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'FD6D3FF64960156BC42A6ECE78C9F2EA'
    
_lr_action_items = {'MUL_OP':([11,12,13,17,18,19,22,23,27,28,29,31,34,36,38,],[20,-10,-11,20,20,-13,20,20,-9,20,-12,20,20,20,20,]),'ADD_OP':([3,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,26,27,28,29,31,33,34,35,36,37,38,],[10,10,10,10,21,-10,-11,10,10,21,21,-13,10,10,21,21,10,-9,-8,-12,21,10,21,10,21,10,21,]),')':([12,13,19,22,27,28,29,38,],[-10,-11,-13,29,-9,-8,-12,39,]),'NUMBER':([3,8,9,10,14,15,20,21,26,33,35,37,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'IDENTIFIER':([0,3,8,9,10,14,15,16,20,21,25,26,33,35,37,],[5,13,13,13,13,13,13,5,13,13,5,13,13,13,13,]),'$end':([1,4,6,7,11,12,13,19,23,24,27,28,29,32,39,],[0,-3,-4,-1,-5,-10,-11,-13,-14,-2,-9,-8,-12,-6,-7,]),';':([4,6,7,11,12,13,19,23,27,28,29,32,39,],[-3,-4,16,-5,-10,-11,-13,-14,-9,-8,-12,-6,-7,]),'=':([5,],[15,]),'WHILE':([0,16,25,],[8,8,8,]),'PRINT':([0,16,25,],[3,3,3,]),'PRINTPIXEL':([0,16,25,],[2,2,2,]),',':([12,13,18,19,27,28,29,31,34,36,],[-10,-11,26,-13,-9,-8,-12,33,35,37,]),'}':([4,6,7,11,12,13,19,23,24,27,28,29,30,32,39,],[-3,-4,-1,-5,-10,-11,-13,-14,-2,-9,-8,-12,32,-6,-7,]),'{':([12,13,17,19,27,28,29,],[-10,-11,25,-13,-9,-8,-12,]),'(':([2,3,8,9,10,14,15,20,21,26,33,35,37,],[9,14,14,14,14,14,14,14,14,14,14,14,14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'structure':([0,16,25,],[6,6,6,]),'statement':([0,16,25,],[7,7,7,]),'programme':([0,16,25,],[1,24,30,]),'expression':([3,8,9,10,14,15,20,21,26,33,35,37,],[11,17,18,19,22,23,27,28,31,34,36,38,]),'assignation':([0,16,25,],[4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parserPaint.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parserPaint.py',14),
  ('statement -> assignation','statement',1,'p_statement','parserPaint.py',19),
  ('statement -> structure','statement',1,'p_statement','parserPaint.py',20),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parserPaint.py',25),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parserPaint.py',30),
  ('statement -> PRINTPIXEL ( expression , expression , expression , expression , expression )','statement',12,'p_printPixel','parserPaint.py',35),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parserPaint.py',40),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parserPaint.py',41),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parserPaint.py',46),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parserPaint.py',47),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parserPaint.py',52),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parserPaint.py',57),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parserPaint.py',62),
]
