
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2E6180939D9388C4833E31478CA02687'
    
_lr_action_items = {';':([1,4,7,9,10,13,16,18,23,24,25,27,],[-4,14,-3,-9,-10,-5,-13,-12,-11,-8,-7,-6,]),'}':([1,4,7,9,10,13,16,18,21,23,24,25,26,27,],[-4,-1,-3,-9,-10,-5,-13,-12,-2,-11,-8,-7,27,-6,]),'IDENTIFIER':([0,3,5,8,11,12,14,19,20,22,],[2,10,10,10,10,10,2,10,10,2,]),'PRINT':([0,14,22,],[3,3,3,]),'$end':([1,4,6,7,9,10,13,16,18,21,23,24,25,27,],[-4,-1,0,-3,-9,-10,-5,-13,-12,-2,-11,-8,-7,-6,]),'ADD_OP':([3,5,8,9,10,11,12,13,15,16,17,18,19,20,23,24,25,],[12,12,12,-9,-10,12,12,20,20,20,20,-12,12,12,-11,-8,-7,]),'WHILE':([0,14,22,],[5,5,5,]),'NUMBER':([3,5,8,11,12,19,20,],[9,9,9,9,9,9,9,]),')':([9,10,17,18,23,24,25,],[-9,-10,23,-12,-11,-8,-7,]),'(':([3,5,8,11,12,19,20,],[11,11,11,11,11,11,11,]),'{':([9,10,15,18,23,24,25,],[-9,-10,22,-12,-11,-8,-7,]),'MUL_OP':([9,10,13,15,16,17,18,23,24,25,],[-9,-10,19,19,19,19,-12,-11,-8,19,]),'=':([2,],[8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'structure':([0,14,22,],[1,1,1,]),'assignation':([0,14,22,],[7,7,7,]),'programme':([0,14,22,],[6,21,26,]),'statement':([0,14,22,],[4,4,4,]),'expression':([3,5,8,11,12,19,20,],[13,15,16,17,18,24,25,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser5.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',22),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',26),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',30),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',31),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',35),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',36),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',40),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',44),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',48),
]
