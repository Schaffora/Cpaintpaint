
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2E6180939D9388C4833E31478CA02687'
    
_lr_action_items = {'WHILE':([0,14,19,],[2,2,2,]),'MUL_OP':([9,11,12,13,16,20,22,23,24,26,],[18,-9,-10,18,-12,18,18,18,-8,-11,]),';':([1,5,7,11,12,13,16,22,23,24,26,27,],[-3,14,-4,-9,-10,-5,-12,-13,-7,-8,-11,-6,]),'(':([2,3,8,10,15,17,18,],[10,10,10,10,10,10,10,]),'$end':([1,4,5,7,11,12,13,16,21,22,23,24,26,27,],[-3,0,-1,-4,-9,-10,-5,-12,-2,-13,-7,-8,-11,-6,]),'PRINT':([0,14,19,],[3,3,3,]),'=':([6,],[15,]),'}':([1,5,7,11,12,13,16,21,22,23,24,25,26,27,],[-3,-1,-4,-9,-10,-5,-12,-2,-13,-7,-8,27,-11,-6,]),'ADD_OP':([2,3,8,9,10,11,12,13,15,16,17,18,20,22,23,24,26,],[8,8,8,17,8,-9,-10,17,8,-12,8,8,17,17,-7,-8,-11,]),'NUMBER':([2,3,8,10,15,17,18,],[11,11,11,11,11,11,11,]),'IDENTIFIER':([0,2,3,8,10,14,15,17,18,19,],[6,12,12,12,12,6,12,12,12,6,]),'{':([9,11,12,16,23,24,26,],[19,-9,-10,-12,-7,-8,-11,]),')':([11,12,16,20,23,24,26,],[-9,-10,-12,26,-7,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,14,19,],[5,5,5,]),'structure':([0,14,19,],[7,7,7,]),'expression':([2,3,8,10,15,17,18,],[9,13,16,20,22,23,24,]),'programme':([0,14,19,],[4,21,25,]),'assignation':([0,14,19,],[1,1,1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser5.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',22),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',26),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',30),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',31),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',35),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',36),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',40),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',44),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',48),
]
