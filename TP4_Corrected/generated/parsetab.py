
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '2E6180939D9388C4833E31478CA02687'
    
_lr_action_items = {'ADD_OP':([2,5,8,9,10,11,12,13,14,16,17,19,20,21,23,25,26,],[8,8,8,17,-9,8,-10,8,17,-12,8,8,17,17,-7,-8,-11,]),'}':([1,6,7,10,12,14,16,21,22,23,24,25,26,27,],[-4,-3,-1,-9,-10,-5,-12,-13,-2,-7,27,-8,-11,-6,]),'{':([9,10,12,16,23,25,26,],[18,-9,-10,-12,-7,-8,-11,]),'$end':([1,4,6,7,10,12,14,16,21,22,23,25,26,27,],[-4,0,-3,-1,-9,-10,-5,-12,-13,-2,-7,-8,-11,-6,]),'=':([3,],[13,]),'WHILE':([0,15,18,],[2,2,2,]),'IDENTIFIER':([0,2,5,8,11,13,15,17,18,19,],[3,12,12,12,12,12,3,12,3,12,]),'(':([2,5,8,11,13,17,19,],[11,11,11,11,11,11,11,]),')':([10,12,16,20,23,25,26,],[-9,-10,-12,26,-7,-8,-11,]),';':([1,6,7,10,12,14,16,21,23,25,26,27,],[-4,-3,15,-9,-10,-5,-12,-13,-7,-8,-11,-6,]),'NUMBER':([2,5,8,11,13,17,19,],[10,10,10,10,10,10,10,]),'PRINT':([0,15,18,],[5,5,5,]),'MUL_OP':([9,10,12,14,16,20,21,23,25,26,],[19,-9,-10,19,-12,19,19,19,-8,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'structure':([0,15,18,],[1,1,1,]),'expression':([2,5,8,11,13,17,19,],[9,14,16,20,21,23,25,]),'programme':([0,15,18,],[4,22,24,]),'assignation':([0,15,18,],[6,6,6,]),'statement':([0,15,18,],[7,7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser5.py',9),
  ('programme -> statement ; programme','programme',3,'p_programme_recursive','parser5.py',13),
  ('statement -> assignation','statement',1,'p_statement','parser5.py',17),
  ('statement -> structure','statement',1,'p_statement','parser5.py',18),
  ('statement -> PRINT expression','statement',2,'p_statement_print','parser5.py',22),
  ('structure -> WHILE expression { programme }','structure',5,'p_structure','parser5.py',26),
  ('expression -> expression ADD_OP expression','expression',3,'p_expression_op','parser5.py',30),
  ('expression -> expression MUL_OP expression','expression',3,'p_expression_op','parser5.py',31),
  ('expression -> NUMBER','expression',1,'p_expression_num_or_var','parser5.py',35),
  ('expression -> IDENTIFIER','expression',1,'p_expression_num_or_var','parser5.py',36),
  ('expression -> ( expression )','expression',3,'p_expression_paren','parser5.py',40),
  ('expression -> ADD_OP expression','expression',2,'p_minus','parser5.py',44),
  ('assignation -> IDENTIFIER = expression','assignation',3,'p_assign','parser5.py',48),
]
